

translate(v = [0, 0, 0]) {
	rotate(a = [0, 0, 0]) {
		linear_extrude(center = true, height = 3) {
			polygon(paths = [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68]], points = [[3.2908965344, 19.2000000000], [3.2908965344, 19.2000000000], [1.7908965344, 16.6019237886], [4.8219854476, 14.8519237886], [6.3219854476, 17.4500000000], [6.3219854476, 17.4500000000], [11.9511505722, 14.2000000000], [11.9511505722, 14.2000000000], [10.4511505722, 11.6019237886], [13.4822394855, 9.8519237886], [14.9822394855, 12.4500000000], [14.9822394855, 12.4500000000], [18.2731360199, 10.5500000000], [18.2731360199, 6.7500000000], [15.2731360199, 6.7500000000], [15.2731360199, 3.2500000000], [18.2731360199, 3.2500000000], [18.2731360199, -3.2500000000], [15.2731360199, -3.2500000000], [15.2731360199, -6.7500000000], [18.2731360199, -6.7500000000], [18.2731360199, -10.5500000000], [14.9822394855, -12.4500000000], [13.4822394855, -9.8519237886], [10.4511505722, -11.6019237886], [11.9511505722, -14.2000000000], [6.3219854476, -17.4500000000], [6.3219854476, -17.4500000000], [4.8219854476, -14.8519237886], [1.7908965344, -16.6019237886], [3.2908965344, -19.2000000000], [3.2908965344, -19.2000000000], [0.0000000000, -21.1000000000], [-3.2908965344, -19.2000000000], [-3.2908965344, -19.2000000000], [-1.7908965344, -16.6019237886], [-4.8219854476, -14.8519237886], [-6.3219854476, -17.4500000000], [-6.3219854476, -17.4500000000], [-11.9511505722, -14.2000000000], [-11.9511505722, -14.2000000000], [-10.4511505722, -11.6019237886], [-13.4822394855, -9.8519237886], [-14.9822394855, -12.4500000000], [-14.9822394855, -12.4500000000], [-18.2731360199, -10.5500000000], [-18.2731360199, -6.7500000000], [-15.2731360199, -6.7500000000], [-15.2731360199, -3.2500000000], [-18.2731360199, -3.2500000000], [-18.2731360199, 3.2500000000], [-18.2731360199, 3.2500000000], [-15.2731360199, 3.2500000000], [-15.2731360199, 6.7500000000], [-18.2731360199, 6.7500000000], [-18.2731360199, 10.5500000000], [-14.9822394855, 12.4500000000], [-14.9822394855, 12.4500000000], [-13.4822394855, 9.8519237886], [-10.4511505722, 11.6019237886], [-11.9511505722, 14.2000000000], [-11.9511505722, 14.2000000000], [-6.3219854476, 17.4500000000], [-6.3219854476, 17.4500000000], [-4.8219854476, 14.8519237886], [-1.7908965344, 16.6019237886], [-3.2908965344, 19.2000000000], [-3.2908965344, 19.2000000000], [0.0000000000, 21.1000000000]]);
		}
	}
}
translate(v = [0, 0, 56]) {
	rotate(a = [0, 0, 0]) {
		linear_extrude(center = true, height = 3) {
			polygon(paths = [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68]], points = [[3.2908965344, 19.2000000000], [3.2908965344, 19.2000000000], [1.7908965344, 16.6019237886], [4.8219854476, 14.8519237886], [6.3219854476, 17.4500000000], [6.3219854476, 17.4500000000], [11.9511505722, 14.2000000000], [11.9511505722, 14.2000000000], [10.4511505722, 11.6019237886], [13.4822394855, 9.8519237886], [14.9822394855, 12.4500000000], [14.9822394855, 12.4500000000], [18.2731360199, 10.5500000000], [18.2731360199, 6.7500000000], [15.2731360199, 6.7500000000], [15.2731360199, 3.2500000000], [18.2731360199, 3.2500000000], [18.2731360199, -3.2500000000], [15.2731360199, -3.2500000000], [15.2731360199, -6.7500000000], [18.2731360199, -6.7500000000], [18.2731360199, -10.5500000000], [14.9822394855, -12.4500000000], [13.4822394855, -9.8519237886], [10.4511505722, -11.6019237886], [11.9511505722, -14.2000000000], [6.3219854476, -17.4500000000], [6.3219854476, -17.4500000000], [4.8219854476, -14.8519237886], [1.7908965344, -16.6019237886], [3.2908965344, -19.2000000000], [3.2908965344, -19.2000000000], [0.0000000000, -21.1000000000], [-3.2908965344, -19.2000000000], [-3.2908965344, -19.2000000000], [-1.7908965344, -16.6019237886], [-4.8219854476, -14.8519237886], [-6.3219854476, -17.4500000000], [-6.3219854476, -17.4500000000], [-11.9511505722, -14.2000000000], [-11.9511505722, -14.2000000000], [-10.4511505722, -11.6019237886], [-13.4822394855, -9.8519237886], [-14.9822394855, -12.4500000000], [-14.9822394855, -12.4500000000], [-18.2731360199, -10.5500000000], [-18.2731360199, -6.7500000000], [-15.2731360199, -6.7500000000], [-15.2731360199, -3.2500000000], [-18.2731360199, -3.2500000000], [-18.2731360199, 3.2500000000], [-18.2731360199, 3.2500000000], [-15.2731360199, 3.2500000000], [-15.2731360199, 6.7500000000], [-18.2731360199, 6.7500000000], [-18.2731360199, 10.5500000000], [-14.9822394855, 12.4500000000], [-14.9822394855, 12.4500000000], [-13.4822394855, 9.8519237886], [-10.4511505722, 11.6019237886], [-11.9511505722, 14.2000000000], [-11.9511505722, 14.2000000000], [-6.3219854476, 17.4500000000], [-6.3219854476, 17.4500000000], [-4.8219854476, 14.8519237886], [-1.7908965344, 16.6019237886], [-3.2908965344, 19.2000000000], [-3.2908965344, 19.2000000000], [0.0000000000, 21.1000000000]]);
		}
	}
}
translate(v = [6.8865680099, 11.9278856830, 28.0000000000]) {
	rotate(a = [90, 0, -30.0000000000]) {
		linear_extrude(center = true, height = 3) {
			polygon(paths = [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], [20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275]], points = [[6.7250000000, 25.0000000000], [8.7679491924, 25.0000000000], [8.7679491924, -25.0000000000], [6.7250000000, -25.0000000000], [6.7250000000, -28.0000000000], [3.2750000000, -28.0000000000], [3.2750000000, -25.0000000000], [-3.2750000000, -25.0000000000], [-3.2750000000, -28.0000000000], [-6.7250000000, -28.0000000000], [-6.7250000000, -25.0000000000], [-8.7679491924, -25.0000000000], [-8.7679491924, 25.0000000000], [-6.7250000000, 25.0000000000], [-6.7250000000, 28.0000000000], [-3.2750000000, 28.0000000000], [-3.2750000000, 25.0000000000], [3.2750000000, 25.0000000000], [3.2750000000, 28.0000000000], [6.7250000000, 28.0000000000], [0.0000000000, 3.1000000000], [-0.0000000000, 3.1000000000], [-0.0763760925, 3.0990590011], [-0.1527058174, 3.0962365758], [-0.2289428352, 3.0915344375], [-0.3050408627, 3.0849554409], [-0.3809537011, 3.0765035800], [-0.4566352640, 3.0661839860], [-0.5320396054, 3.0540029237], [-0.6071209477, 3.0399677885], [-0.6818337093, 3.0240871007], [-0.7561325323, 3.0063705017], [-0.8299723103, 2.9868287470], [-0.9033082154, 2.9654737005], [-0.9760957256, 2.9423183265], [-1.0482906519, 2.9173766828], [-1.1198491652, 2.8906639112], [-1.1907278224, 2.8621962289], [-1.2608835935, 2.8319909187], [-1.3302738872, 2.8000663180], [-1.3988565768, 2.7664418081], [-1.4665900262, 2.7311378023], [-1.5334331145, 2.6941757335], [-1.5993452617, 2.6555780414], [-1.6642864527, 2.6153681583], [-1.7282172620, 2.5735704955], [-1.7910988774, 2.5302104283], [-1.8528931237, 2.4853142803], [-1.9135624860, 2.4389093079], [-1.9730701321, 2.3910236833], [-2.0313799350, 2.3416864776], [-2.0884564953, 2.2909276434], [-2.1442651619, 2.2387779960], [-2.1987720536, 2.1852691954], [-2.2519440795, 2.1304337265], [-2.3037489590, 2.0743048797], [-2.3541552416, 2.0169167306], [-2.4031323259, 1.9583041194], [-2.4506504781, 1.8985026295], [-2.4966808501, 1.8375485661], [-2.5411954970, 1.7754789342], [-2.5841673942, 1.7123314162], [-2.6255704536, 1.6481443485], [-2.6653795395, 1.5829566989], [-2.7035704840, 1.5168080425], [-2.7401201017, 1.4497385380], [-2.7750062032, 1.3817889029], [-2.8082076095, 1.3130003893], [-2.8397041640, 1.2434147583], [-2.8694767453, 1.1730742551], [-2.8975072787, 1.1020215832], [-2.9237787469, 1.0302998784], [-2.9482752005, 0.9579526826], [-2.9709817680, 0.8850239175], [-2.9918846641, 0.8115578578], [-3.0109711989, 0.7375991046], [-3.0282297851, 0.6631925579], [-3.0436499448, 0.5883833897], [-3.0572223168, 0.5132170162], [-3.0689386612, 0.4377390707], [-3.0787918650, 0.3619953755], [-3.0867759465, 0.2860319143], [-3.0928860585, 0.2098948044], [-3.0971184917, 0.1336302681], [-3.0994706764, 0.0572846054], [-3.0999411848, -0.0190958346], [-3.0985297311, -0.0954646815], [-3.0952371723, -0.1717755722], [-3.0900655072, -0.2479821787], [-3.0830178756, -0.3240382361], [-3.0740985561, -0.3998975712], [-3.0633129635, -0.4755141301], [-3.0506676456, -0.5508420063], [-3.0361702796, -0.6258354684], [-3.0198296665, -0.7004489883], [-3.0016557268, -0.7746372684], [-2.9816594938, -0.8483552692], [-2.9598531071, -0.9215582370], [-2.9362498053, -0.9942017303], [-2.9108639179, -1.0662416478], [-2.8837108565, -1.1376342541], [-2.8548071056, -1.2083362072], [-2.8241702127, -1.2783045842], [-2.7918187771, -1.3474969075], [-2.7577724395, -1.4158711707], [-2.7220518691, -1.4833858642], [-2.6846787517, -1.5500000000], [-2.6456757766, -1.6156731369], [-2.6050666221, -1.6803654051], [-2.5628759420, -1.7440375300], [-2.5191293500, -1.8066508567], [-2.4738534046, -1.8681673728], [-2.4270755925, -1.9285497318], [-2.3788243125, -1.9877612760], [-2.3291288576, -2.0457660581], [-2.2780193978, -2.1025288638], [-2.2255269615, -2.1580152325], [-2.1716834165, -2.2121914787], [-2.1165214512, -2.2650247122], [-2.0600745540, -2.3164828581], [-2.0023769937, -2.3665346765], [-1.9434637983, -2.4151497810], [-1.8833707337, -2.4622986577], [-1.8221342821, -2.5079526826], [-1.7597916200, -2.5520841393], [-1.6963805955, -2.5946662358], [-1.6319397049, -2.6356731208], [-1.5665080702, -2.6750798990], [-1.5001254147, -2.7128626468], [-1.4328320390, -2.7489984264], [-1.3646687966, -2.7834652999], [-1.2956770691, -2.8162423426], [-1.2258987413, -2.8473096558], [-1.1553761752, -2.8766483786], [-1.0841521847, -2.9042406994], [-1.0122700098, -2.9300698673], [-0.9397732898, -2.9541202013], [-0.8667060370, -2.9763771007], [-0.7931126105, -2.9968270532], [-0.7190376885, -3.0154576440], [-0.6445262415, -3.0322575623], [-0.5696235052, -3.0472166090], [-0.4943749528, -3.0603257026], [-0.4188262672, -3.0715768846], [-0.3430233139, -3.0809633244], [-0.2670121124, -3.0884793235], [-0.1908388090, -3.0941203191], [-0.1145496481, -3.0978828864], [-0.0381909446, -3.0997647414], [0.0381909446, -3.0997647414], [0.1145496481, -3.0978828864], [0.1908388090, -3.0941203191], [0.2670121124, -3.0884793235], [0.3430233139, -3.0809633244], [0.4188262672, -3.0715768846], [0.4943749528, -3.0603257026], [0.5696235052, -3.0472166090], [0.6445262415, -3.0322575623], [0.7190376885, -3.0154576440], [0.7931126105, -2.9968270532], [0.8667060370, -2.9763771007], [0.9397732898, -2.9541202013], [1.0122700098, -2.9300698673], [1.0841521847, -2.9042406994], [1.1553761752, -2.8766483786], [1.2258987413, -2.8473096558], [1.2956770691, -2.8162423426], [1.3646687966, -2.7834652999], [1.4328320390, -2.7489984264], [1.5001254147, -2.7128626468], [1.5665080702, -2.6750798990], [1.6319397049, -2.6356731208], [1.6963805955, -2.5946662358], [1.7597916200, -2.5520841393], [1.8221342821, -2.5079526826], [1.8833707337, -2.4622986577], [1.9434637983, -2.4151497810], [2.0023769937, -2.3665346765], [2.0600745540, -2.3164828581], [2.1165214512, -2.2650247122], [2.1716834165, -2.2121914787], [2.2255269615, -2.1580152325], [2.2780193978, -2.1025288638], [2.3291288576, -2.0457660581], [2.3788243125, -1.9877612760], [2.4270755925, -1.9285497318], [2.4738534046, -1.8681673728], [2.5191293500, -1.8066508567], [2.5628759420, -1.7440375300], [2.6050666221, -1.6803654051], [2.6456757766, -1.6156731369], [2.6846787517, -1.5500000000], [2.7220518691, -1.4833858642], [2.7577724395, -1.4158711707], [2.7918187771, -1.3474969075], [2.8241702127, -1.2783045842], [2.8548071056, -1.2083362072], [2.8837108565, -1.1376342541], [2.9108639179, -1.0662416478], [2.9362498053, -0.9942017303], [2.9598531071, -0.9215582370], [2.9816594938, -0.8483552692], [3.0016557268, -0.7746372684], [3.0198296665, -0.7004489883], [3.0361702796, -0.6258354684], [3.0506676456, -0.5508420063], [3.0633129635, -0.4755141301], [3.0740985561, -0.3998975712], [3.0830178756, -0.3240382361], [3.0900655072, -0.2479821787], [3.0952371723, -0.1717755722], [3.0985297311, -0.0954646815], [3.0999411848, -0.0190958346], [3.0994706764, 0.0572846054], [3.0971184917, 0.1336302681], [3.0928860585, 0.2098948044], [3.0867759465, 0.2860319143], [3.0787918650, 0.3619953755], [3.0689386612, 0.4377390707], [3.0572223168, 0.5132170162], [3.0436499448, 0.5883833897], [3.0282297851, 0.6631925579], [3.0109711989, 0.7375991046], [2.9918846641, 0.8115578578], [2.9709817680, 0.8850239175], [2.9482752005, 0.9579526826], [2.9237787469, 1.0302998784], [2.8975072787, 1.1020215832], [2.8694767453, 1.1730742551], [2.8397041640, 1.2434147583], [2.8082076095, 1.3130003893], [2.7750062032, 1.3817889029], [2.7401201017, 1.4497385380], [2.7035704840, 1.5168080425], [2.6653795395, 1.5829566989], [2.6255704536, 1.6481443485], [2.5841673942, 1.7123314162], [2.5411954970, 1.7754789342], [2.4966808501, 1.8375485661], [2.4506504781, 1.8985026295], [2.4031323259, 1.9583041194], [2.3541552416, 2.0169167306], [2.3037489590, 2.0743048797], [2.2519440795, 2.1304337265], [2.1987720536, 2.1852691954], [2.1442651619, 2.2387779960], [2.0884564953, 2.2909276434], [2.0313799350, 2.3416864776], [1.9730701321, 2.3910236833], [1.9135624860, 2.4389093079], [1.8528931237, 2.4853142803], [1.7910988774, 2.5302104283], [1.7282172620, 2.5735704955], [1.6642864527, 2.6153681583], [1.5993452617, 2.6555780414], [1.5334331145, 2.6941757335], [1.4665900262, 2.7311378023], [1.3988565768, 2.7664418081], [1.3302738872, 2.8000663180], [1.2608835935, 2.8319909187], [1.1907278224, 2.8621962289], [1.1198491652, 2.8906639112], [1.0482906519, 2.9173766828], [0.9760957256, 2.9423183265], [0.9033082154, 2.9654737005], [0.8299723103, 2.9868287470], [0.7561325323, 3.0063705017], [0.6818337093, 3.0240871007], [0.6071209477, 3.0399677885], [0.5320396054, 3.0540029237], [0.4566352640, 3.0661839860], [0.3809537011, 3.0765035800], [0.3050408627, 3.0849554409], [0.2289428352, 3.0915344375], [0.1527058174, 3.0962365758], [0.0763760925, 3.0990590011]]);
		}
	}
}
translate(v = [13.7731360199, 0.0000000000, 28.0000000000]) {
	rotate(a = [90, 0, -90.0000000000]) {
		linear_extrude(center = true, height = 3) {
			polygon(paths = [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]], points = [[6.7250000000, 25.0000000000], [8.7679491924, 25.0000000000], [8.7679491924, -25.0000000000], [6.7250000000, -25.0000000000], [6.7250000000, -28.0000000000], [3.2750000000, -28.0000000000], [3.2750000000, -25.0000000000], [-3.2750000000, -25.0000000000], [-3.2750000000, -28.0000000000], [-6.7250000000, -28.0000000000], [-6.7250000000, -25.0000000000], [-8.7679491924, -25.0000000000], [-8.7679491924, 25.0000000000], [-6.7250000000, 25.0000000000], [-6.7250000000, 28.0000000000], [-3.2750000000, 28.0000000000], [-3.2750000000, 25.0000000000], [3.2750000000, 25.0000000000], [3.2750000000, 28.0000000000], [6.7250000000, 28.0000000000]]);
		}
	}
}
translate(v = [6.8865680099, -11.9278856830, 28.0000000000]) {
	rotate(a = [90, 0, -150.0000000000]) {
		linear_extrude(center = true, height = 3) {
			polygon(paths = [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]], points = [[6.7250000000, 25.0000000000], [8.7679491924, 25.0000000000], [8.7679491924, -25.0000000000], [6.7250000000, -25.0000000000], [6.7250000000, -28.0000000000], [3.2750000000, -28.0000000000], [3.2750000000, -25.0000000000], [-3.2750000000, -25.0000000000], [-3.2750000000, -28.0000000000], [-6.7250000000, -28.0000000000], [-6.7250000000, -25.0000000000], [-8.7679491924, -25.0000000000], [-8.7679491924, 25.0000000000], [-6.7250000000, 25.0000000000], [-6.7250000000, 28.0000000000], [-3.2750000000, 28.0000000000], [-3.2750000000, 25.0000000000], [3.2750000000, 25.0000000000], [3.2750000000, 28.0000000000], [6.7250000000, 28.0000000000]]);
		}
	}
}
translate(v = [-6.8865680099, -11.9278856830, 28.0000000000]) {
	rotate(a = [90, 0, 150.0000000000]) {
		linear_extrude(center = true, height = 3) {
			polygon(paths = [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], [20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275]], points = [[6.7250000000, 25.0000000000], [8.7679491924, 25.0000000000], [8.7679491924, -25.0000000000], [6.7250000000, -25.0000000000], [6.7250000000, -28.0000000000], [3.2750000000, -28.0000000000], [3.2750000000, -25.0000000000], [-3.2750000000, -25.0000000000], [-3.2750000000, -28.0000000000], [-6.7250000000, -28.0000000000], [-6.7250000000, -25.0000000000], [-8.7679491924, -25.0000000000], [-8.7679491924, 25.0000000000], [-6.7250000000, 25.0000000000], [-6.7250000000, 28.0000000000], [-3.2750000000, 28.0000000000], [-3.2750000000, 25.0000000000], [3.2750000000, 25.0000000000], [3.2750000000, 28.0000000000], [6.7250000000, 28.0000000000], [0.0000000000, 3.1000000000], [-0.0000000000, 3.1000000000], [-0.0763760925, 3.0990590011], [-0.1527058174, 3.0962365758], [-0.2289428352, 3.0915344375], [-0.3050408627, 3.0849554409], [-0.3809537011, 3.0765035800], [-0.4566352640, 3.0661839860], [-0.5320396054, 3.0540029237], [-0.6071209477, 3.0399677885], [-0.6818337093, 3.0240871007], [-0.7561325323, 3.0063705017], [-0.8299723103, 2.9868287470], [-0.9033082154, 2.9654737005], [-0.9760957256, 2.9423183265], [-1.0482906519, 2.9173766828], [-1.1198491652, 2.8906639112], [-1.1907278224, 2.8621962289], [-1.2608835935, 2.8319909187], [-1.3302738872, 2.8000663180], [-1.3988565768, 2.7664418081], [-1.4665900262, 2.7311378023], [-1.5334331145, 2.6941757335], [-1.5993452617, 2.6555780414], [-1.6642864527, 2.6153681583], [-1.7282172620, 2.5735704955], [-1.7910988774, 2.5302104283], [-1.8528931237, 2.4853142803], [-1.9135624860, 2.4389093079], [-1.9730701321, 2.3910236833], [-2.0313799350, 2.3416864776], [-2.0884564953, 2.2909276434], [-2.1442651619, 2.2387779960], [-2.1987720536, 2.1852691954], [-2.2519440795, 2.1304337265], [-2.3037489590, 2.0743048797], [-2.3541552416, 2.0169167306], [-2.4031323259, 1.9583041194], [-2.4506504781, 1.8985026295], [-2.4966808501, 1.8375485661], [-2.5411954970, 1.7754789342], [-2.5841673942, 1.7123314162], [-2.6255704536, 1.6481443485], [-2.6653795395, 1.5829566989], [-2.7035704840, 1.5168080425], [-2.7401201017, 1.4497385380], [-2.7750062032, 1.3817889029], [-2.8082076095, 1.3130003893], [-2.8397041640, 1.2434147583], [-2.8694767453, 1.1730742551], [-2.8975072787, 1.1020215832], [-2.9237787469, 1.0302998784], [-2.9482752005, 0.9579526826], [-2.9709817680, 0.8850239175], [-2.9918846641, 0.8115578578], [-3.0109711989, 0.7375991046], [-3.0282297851, 0.6631925579], [-3.0436499448, 0.5883833897], [-3.0572223168, 0.5132170162], [-3.0689386612, 0.4377390707], [-3.0787918650, 0.3619953755], [-3.0867759465, 0.2860319143], [-3.0928860585, 0.2098948044], [-3.0971184917, 0.1336302681], [-3.0994706764, 0.0572846054], [-3.0999411848, -0.0190958346], [-3.0985297311, -0.0954646815], [-3.0952371723, -0.1717755722], [-3.0900655072, -0.2479821787], [-3.0830178756, -0.3240382361], [-3.0740985561, -0.3998975712], [-3.0633129635, -0.4755141301], [-3.0506676456, -0.5508420063], [-3.0361702796, -0.6258354684], [-3.0198296665, -0.7004489883], [-3.0016557268, -0.7746372684], [-2.9816594938, -0.8483552692], [-2.9598531071, -0.9215582370], [-2.9362498053, -0.9942017303], [-2.9108639179, -1.0662416478], [-2.8837108565, -1.1376342541], [-2.8548071056, -1.2083362072], [-2.8241702127, -1.2783045842], [-2.7918187771, -1.3474969075], [-2.7577724395, -1.4158711707], [-2.7220518691, -1.4833858642], [-2.6846787517, -1.5500000000], [-2.6456757766, -1.6156731369], [-2.6050666221, -1.6803654051], [-2.5628759420, -1.7440375300], [-2.5191293500, -1.8066508567], [-2.4738534046, -1.8681673728], [-2.4270755925, -1.9285497318], [-2.3788243125, -1.9877612760], [-2.3291288576, -2.0457660581], [-2.2780193978, -2.1025288638], [-2.2255269615, -2.1580152325], [-2.1716834165, -2.2121914787], [-2.1165214512, -2.2650247122], [-2.0600745540, -2.3164828581], [-2.0023769937, -2.3665346765], [-1.9434637983, -2.4151497810], [-1.8833707337, -2.4622986577], [-1.8221342821, -2.5079526826], [-1.7597916200, -2.5520841393], [-1.6963805955, -2.5946662358], [-1.6319397049, -2.6356731208], [-1.5665080702, -2.6750798990], [-1.5001254147, -2.7128626468], [-1.4328320390, -2.7489984264], [-1.3646687966, -2.7834652999], [-1.2956770691, -2.8162423426], [-1.2258987413, -2.8473096558], [-1.1553761752, -2.8766483786], [-1.0841521847, -2.9042406994], [-1.0122700098, -2.9300698673], [-0.9397732898, -2.9541202013], [-0.8667060370, -2.9763771007], [-0.7931126105, -2.9968270532], [-0.7190376885, -3.0154576440], [-0.6445262415, -3.0322575623], [-0.5696235052, -3.0472166090], [-0.4943749528, -3.0603257026], [-0.4188262672, -3.0715768846], [-0.3430233139, -3.0809633244], [-0.2670121124, -3.0884793235], [-0.1908388090, -3.0941203191], [-0.1145496481, -3.0978828864], [-0.0381909446, -3.0997647414], [0.0381909446, -3.0997647414], [0.1145496481, -3.0978828864], [0.1908388090, -3.0941203191], [0.2670121124, -3.0884793235], [0.3430233139, -3.0809633244], [0.4188262672, -3.0715768846], [0.4943749528, -3.0603257026], [0.5696235052, -3.0472166090], [0.6445262415, -3.0322575623], [0.7190376885, -3.0154576440], [0.7931126105, -2.9968270532], [0.8667060370, -2.9763771007], [0.9397732898, -2.9541202013], [1.0122700098, -2.9300698673], [1.0841521847, -2.9042406994], [1.1553761752, -2.8766483786], [1.2258987413, -2.8473096558], [1.2956770691, -2.8162423426], [1.3646687966, -2.7834652999], [1.4328320390, -2.7489984264], [1.5001254147, -2.7128626468], [1.5665080702, -2.6750798990], [1.6319397049, -2.6356731208], [1.6963805955, -2.5946662358], [1.7597916200, -2.5520841393], [1.8221342821, -2.5079526826], [1.8833707337, -2.4622986577], [1.9434637983, -2.4151497810], [2.0023769937, -2.3665346765], [2.0600745540, -2.3164828581], [2.1165214512, -2.2650247122], [2.1716834165, -2.2121914787], [2.2255269615, -2.1580152325], [2.2780193978, -2.1025288638], [2.3291288576, -2.0457660581], [2.3788243125, -1.9877612760], [2.4270755925, -1.9285497318], [2.4738534046, -1.8681673728], [2.5191293500, -1.8066508567], [2.5628759420, -1.7440375300], [2.6050666221, -1.6803654051], [2.6456757766, -1.6156731369], [2.6846787517, -1.5500000000], [2.7220518691, -1.4833858642], [2.7577724395, -1.4158711707], [2.7918187771, -1.3474969075], [2.8241702127, -1.2783045842], [2.8548071056, -1.2083362072], [2.8837108565, -1.1376342541], [2.9108639179, -1.0662416478], [2.9362498053, -0.9942017303], [2.9598531071, -0.9215582370], [2.9816594938, -0.8483552692], [3.0016557268, -0.7746372684], [3.0198296665, -0.7004489883], [3.0361702796, -0.6258354684], [3.0506676456, -0.5508420063], [3.0633129635, -0.4755141301], [3.0740985561, -0.3998975712], [3.0830178756, -0.3240382361], [3.0900655072, -0.2479821787], [3.0952371723, -0.1717755722], [3.0985297311, -0.0954646815], [3.0999411848, -0.0190958346], [3.0994706764, 0.0572846054], [3.0971184917, 0.1336302681], [3.0928860585, 0.2098948044], [3.0867759465, 0.2860319143], [3.0787918650, 0.3619953755], [3.0689386612, 0.4377390707], [3.0572223168, 0.5132170162], [3.0436499448, 0.5883833897], [3.0282297851, 0.6631925579], [3.0109711989, 0.7375991046], [2.9918846641, 0.8115578578], [2.9709817680, 0.8850239175], [2.9482752005, 0.9579526826], [2.9237787469, 1.0302998784], [2.8975072787, 1.1020215832], [2.8694767453, 1.1730742551], [2.8397041640, 1.2434147583], [2.8082076095, 1.3130003893], [2.7750062032, 1.3817889029], [2.7401201017, 1.4497385380], [2.7035704840, 1.5168080425], [2.6653795395, 1.5829566989], [2.6255704536, 1.6481443485], [2.5841673942, 1.7123314162], [2.5411954970, 1.7754789342], [2.4966808501, 1.8375485661], [2.4506504781, 1.8985026295], [2.4031323259, 1.9583041194], [2.3541552416, 2.0169167306], [2.3037489590, 2.0743048797], [2.2519440795, 2.1304337265], [2.1987720536, 2.1852691954], [2.1442651619, 2.2387779960], [2.0884564953, 2.2909276434], [2.0313799350, 2.3416864776], [1.9730701321, 2.3910236833], [1.9135624860, 2.4389093079], [1.8528931237, 2.4853142803], [1.7910988774, 2.5302104283], [1.7282172620, 2.5735704955], [1.6642864527, 2.6153681583], [1.5993452617, 2.6555780414], [1.5334331145, 2.6941757335], [1.4665900262, 2.7311378023], [1.3988565768, 2.7664418081], [1.3302738872, 2.8000663180], [1.2608835935, 2.8319909187], [1.1907278224, 2.8621962289], [1.1198491652, 2.8906639112], [1.0482906519, 2.9173766828], [0.9760957256, 2.9423183265], [0.9033082154, 2.9654737005], [0.8299723103, 2.9868287470], [0.7561325323, 3.0063705017], [0.6818337093, 3.0240871007], [0.6071209477, 3.0399677885], [0.5320396054, 3.0540029237], [0.4566352640, 3.0661839860], [0.3809537011, 3.0765035800], [0.3050408627, 3.0849554409], [0.2289428352, 3.0915344375], [0.1527058174, 3.0962365758], [0.0763760925, 3.0990590011]]);
		}
	}
}
translate(v = [-13.7731360199, -0.0000000000, 28.0000000000]) {
	rotate(a = [90, 0, 90.0000000000]) {
		linear_extrude(center = true, height = 3) {
			polygon(paths = [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]], points = [[6.7250000000, 25.0000000000], [8.7679491924, 25.0000000000], [8.7679491924, -25.0000000000], [6.7250000000, -25.0000000000], [6.7250000000, -28.0000000000], [3.2750000000, -28.0000000000], [3.2750000000, -25.0000000000], [-3.2750000000, -25.0000000000], [-3.2750000000, -28.0000000000], [-6.7250000000, -28.0000000000], [-6.7250000000, -25.0000000000], [-8.7679491924, -25.0000000000], [-8.7679491924, 25.0000000000], [-6.7250000000, 25.0000000000], [-6.7250000000, 28.0000000000], [-3.2750000000, 28.0000000000], [-3.2750000000, 25.0000000000], [3.2750000000, 25.0000000000], [3.2750000000, 28.0000000000], [6.7250000000, 28.0000000000]]);
		}
	}
}
translate(v = [-6.8865680099, 11.9278856830, 28.0000000000]) {
	rotate(a = [90, 0, 30.0000000000]) {
		linear_extrude(center = true, height = 3) {
			polygon(paths = [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]], points = [[6.7250000000, 25.0000000000], [8.7679491924, 25.0000000000], [8.7679491924, -25.0000000000], [6.7250000000, -25.0000000000], [6.7250000000, -28.0000000000], [3.2750000000, -28.0000000000], [3.2750000000, -25.0000000000], [-3.2750000000, -25.0000000000], [-3.2750000000, -28.0000000000], [-6.7250000000, -28.0000000000], [-6.7250000000, -25.0000000000], [-8.7679491924, -25.0000000000], [-8.7679491924, 25.0000000000], [-6.7250000000, 25.0000000000], [-6.7250000000, 28.0000000000], [-3.2750000000, 28.0000000000], [-3.2750000000, 25.0000000000], [3.2750000000, 25.0000000000], [3.2750000000, 28.0000000000], [6.7250000000, 28.0000000000]]);
		}
	}
}
/***********************************************
*********      SolidPython code:      **********
************************************************
 
import svgwrite
import svgwrite.shapes
from solid import scad_render_to_file
from solid.objects import linear_extrude, part, polygon, translate, rotate

from .poly import Poly, offset_polygon
from .util import LEFT, RIGHT, BACK, FRONT

__author__ = 'Mark Weinreuter'

DEFAULT_COLORS = ((27, 158, 119), (217, 95, 2), (117, 112, 179), (231, 41, 138), (102, 166, 30), (230, 171, 2), (166, 118, 29), (102, 102, 102))

PIX_IN_MM = 0.264583333
MM_PIX_SCALE = 1 / PIX_IN_MM


def simple_algin(polys, pad=3, extras={}):
    """

    :param polys:
    :type polys:
    :param pad:
    :type pad:
    :return:
    :rtype:[Polygon]
    """
    nx = pad
    aligned = []
    ny = pad
    max_h = -1
    max_width = -1 if not ("max_width" in extras) else extras["max_width"]
    for poly in polys:
        if poly is None or len(poly) == 0:
            continue

        bb = poly.boundingBox()
        bw = (bb[RIGHT] - bb[LEFT])
        bh = (bb[FRONT] - bb[BACK])
        bw2 = bw / 2
        max_h = max(max_h, bh)

        if max_width > -1:
            if max_width < bw:
                max_width = bw + pad

            if max_width < nx + bw:
                ny += pad + max_h / 2 + bh / 2
                nx = pad
                max_h = bh

        nx += bw2  # half to middle
        aligned.append((nx, ny))
        nx +=  bw2 + pad  # half from middle

    return aligned


def poly_to_openscad(poly, board, shift=False):
    poly = poly.shifted() if shift and isinstance(poly, Poly) else poly
    points = []
    paths = []
    start = 0

    if poly is None or len(poly) == 0:
        return part()

    # collect all points in a list, create index list per contour
    for con in poly:
        points.extend(con)
        p_count = len(con)
        paths.append(list(range(start, start + p_count)))
        start += p_count
    return linear_extrude(height=board, center=True)(polygon(points, paths))


def gen_openscad_parts(extr_height, *args):
    def trans(x=0.0, y=0.0, z=0.0):
        return translate([x, y, z])

    def rot(x=0.0, y=0.0, z=0.0):
        if isinstance(x, (list, tuple)):
            return rotate(x)
        return rotate([x, y, z])

    model = part()
    for thing in args:
        if isinstance(thing, (list, tuple)):
            p = part()
            for t in thing:
                p.add(trans(*t.d3pos)(rot(*t.d3rot)(poly_to_openscad(t, extr_height))))
            model.add(p)
        else:
            model.add(trans(*thing.d3pos)(rot(*thing.d3rot)(poly_to_openscad(thing, extr_height))))

    return model


def to_openscad(path, extr_height, *args):
    return scad_render_to_file(gen_openscad_parts(extr_height, *args), path)


def write_svg(path, polys, laser_kerf=-.1, offset=True, align={"extras": {}}):
    if isinstance(polys, Poly):
        polys = (polys,)

    offseted_polys = [offset_polygon(p, laser_kerf if offset else 0) for p in polys]
    if "method" in align:
        align_data = align["method"](offset_polygon)
    else:
        align_data = simple_algin(offseted_polys, extras=align["extras"])

    bbs = [p.to_polygon().boundingBox() for p in offseted_polys]
    i = 0
    for bb in bbs:
        a = align_data[i]
        bbs[i] = bb[0] + a[0], bb[1] + a[0], bb[2] + a[1], bb[3] + a[1]
        i += 1
    bbs2 = list(zip(*bbs))

    d_off = 5
    min_x, max_x = min(bbs2[LEFT])-d_off, max(bbs2[RIGHT]) + d_off
    min_y, maxy = min(bbs2[BACK]) - d_off, max(bbs2[FRONT]) + d_off
    x_dim, y_dim = max_x - min_x, maxy - min_y
    dwg = svgwrite.Drawing(filename=path, size=(str(x_dim) + "mm", str(y_dim) + "mm"), debug=True)

    dwg.viewbox(min_x, min_y, x_dim, y_dim)

    for i, poly in enumerate(offseted_polys):
        align = align_data[i]
        group = svgwrite.container.Group(transform="translate(%g, %g)" % align)
        for i, contour in enumerate(poly):
            col = DEFAULT_COLORS[poly.isHole(i)]
            pa = svgwrite.path.Path("M %g %g" % contour[0], fill="none", stroke="rgb(%g, %g, %g)" % col)
            for point in contour[1:]:
                pa.push("L %g %g " % point)
            pa.push("z")
            group.add(pa)
        for extra in poly.svg_extras:
            group.add(extra)
        dwg.add(group)
    file = open(path, "w")
    dwg.write(file)
    file.close()
 
 
************************************************/
